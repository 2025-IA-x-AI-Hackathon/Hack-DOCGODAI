# Redis configuration for JWT token management

# Network binding
bind 127.0.0.1
protected-mode no
port 6379

# Persistence configuration - JWT tokens need persistence
# RDB snapshots
save 900 1
save 300 10
save 60 10000
dbfilename jwt_dump.rdb
dir /data

# AOF for better durability
appendonly yes
appendfilename "jwt_appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Memory management for JWT tokens
maxmemory 256mb
maxmemory-policy allkeys-lru

# JWT tokens typically have TTL
# Enable keyspace notifications for expired keys
notify-keyspace-events Ex

# Performance tuning
tcp-backlog 511
timeout 0
tcp-keepalive 300

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Database settings
databases 16

# Logging
loglevel notice
logfile ""

# Disable dangerous commands in production
# Uncomment these in production environment
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG ""

# Security
# Password will be set via environment variable in docker-compose
# requirepass will be dynamically added when container starts

# Disable Redis commands that are not needed for JWT management
# rename-command DEBUG ""

# Lua scripting
lua-time-limit 5000

# Cluster disabled (single instance for JWT)
cluster-enabled no

# Stop writes on RDB errors
stop-writes-on-bgsave-error yes

# RDB compression and checksum
rdbcompression yes
rdbchecksum yes