version: '3.8'
name: poppins

networks:
  poppins-network:
    driver: bridge

volumes:
  volume-n8n:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volume-n8n
      o: bind
  volume-mysql:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volume-mysql
      o: bind
  volume-kafka:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volume-kafka
      o: bind
  volume-redis:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volume-redis
      o: bind

services:
  n8n:
    container_name: n8n
    image: ${N8N_IMAGE}
    environment:
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - N8N_AUTH_ENABLED=${N8N_AUTH_ENABLED}
      - DB_SQLITE_POOL_SIZE=${DB_SQLITE_POOL_SIZE}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=${N8N_BLOCK_ENV_ACCESS_IN_NODE}
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=${N8N_GIT_NODE_DISABLE_BARE_REPOS}
    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - volume-n8n:/home/node/.n8n
      - ./workflows:/workflows
      - ./init-workflows.sh:/init-workflows.sh
    entrypoint: /bin/sh
    command: /init-workflows.sh
    restart: always

  mysql:
    container_name: mysql
    image: ${MYSQL_IMAGE}
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - volume-mysql:/var/lib/mysql
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p${MYSQL_ROOT_PASSWORD}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - poppins-network

  kafka:
    container_name: kafka
    image: ${KAFKA_IMAGE}
    ports:
      - '${KAFKA_PORT}:9092'
    environment:
      - KAFKA_CFG_NODE_ID=${KAFKA_NODE_ID}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=${KAFKA_CONTROLLER_QUORUM_VOTERS}
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - volume-kafka:/bitnami/kafka
    networks:
      - poppins-network

  redis: 
    container_name: redis
    image: ${REDIS_IMAGE}
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - volume-redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - poppins-network
    restart: always