{
  "name": "103-1. ConceptMaker-1",
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST"
        ],
        "path": "concept1",
        "responseMode": "responseNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "3ce14168-0ccd-46af-8b5c-8aeb6156129e",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        240,
        -96
      ],
      "webhookId": "43090d66-b8f9-486c-b6eb-0c3624232477",
      "retryOnFail": false,
      "typeVersion": 2.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b635c810-ea67-4921-a401-a84d74832739",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        240,
        160
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "o1pUX0sSSunBHGtz",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "de83e0f2-ca9b-448a-a250-02107d211974",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1008,
        -96
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=={{ \n\"Chapter ID: \" + $json.body.chapterId + \"\\n\" +\n\"Title: \" + $json.body.courseTitle + \"\\n\" +\n\"Description: \" + $json.body.courseDescription + \"\\n\" +\n\"Prompt: \" + $json.body.prompt\n}}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "당신은 JSON 응답 전용 AI입니다.\n\n입력 데이터는 다음 형식으로 주어집니다:\n\n\t\"chapterId\": \"number\",\n\t\"courseTitle\": \"string\",\n\t\"courseDescription\": \"string\",\n\t\"prompt\": \"string\"}\n\n작업:\nYou are an experienced educational content creator, skilled at transforming course details and specific prompts into comprehensive and well-structured self-study materials. Your goal is to generate 1000~1200 words worth of high-quality educational content in a markdown format that is easy for self-learners to understand. Use headings, subheadings, bullet points, etc. for easier understanding.\n\n출력 형식 (반드시 JSON):\n{\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"contents\": \"string\"\n}\n\n⚠️ 규칙:\n- 반드시 위 JSON 구조만 출력하세요.\n- 절대로 {\"output\": {...}} 또는 문자열(JSON string) 형태로 감싸지 마세요.\n- 대화형 멘트, 설명, 사족 없이 오직 JSON 데이터만 출력하세요.\n- \"contents\" 필드는 markdown 문서 본문으로 채우세요 .\n⚠️ 출력 시 절대로 Markdown 코드블록(````json`, ``` 등)을 포함하지 마세요.\n⚠️ 절대로 {\"output\": {...}} 형태로 감싸지 말고, \n오직 {\"title\": \"...\", \"description\": \"...\", \"contents\": \"...\"} 구조로만 출력하세요.\n"
        }
      },
      "id": "cd3087cc-bf43-485e-9632-dca236643a2a",
      "name": "ConceptMaker",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        448,
        -96
      ],
      "typeVersion": 3,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// 1) 원문 가져오기\nlet raw = $input.first().json.output ?? \"\";\n\n// 2) 코드블록 ```json / ``` 제거 + 앞뒤 공백 제거\nraw = raw.replace(/```json/g, \"\").replace(/```/g, \"\").trim();\n\n// 3) title / description 안전 추출 (따옴표 내부만 캡처)\nconst pick = (re) => {\n  const m = re.exec(raw);\n  return m ? m[1].trim() : \"\";\n};\nconst title = pick(/\"title\"\\s*:\\s*\"([^\"]*)\"/s);\nconst description = pick(/\"description\"\\s*:\\s*\"([^\"]*)\"/s);\n\n// 4) contents 추출\n//    - \"contents\": 이후 전체를 가져오되, 선행 따옴표/후행 따옴표/닫는 중괄호 등을 정리\nlet contentsPart = raw.split(/\"contents\"\\s*:/)[1] || \"\";\n\n// 선행/후행 공백 제거\ncontentsPart = contentsPart.trim();\n\n// 선행 따옴표 하나 제거 (있다면)\nif (contentsPart.startsWith('\"')) contentsPart = contentsPart.slice(1);\n\n// 맨 끝쪽의 마지막 따옴표 + 그 뒤의 쉼표/괄호 제거\n// 끝에서부터 첫 따옴표 위치를 찾아 거기까지만 취함\nconst lastQuote = contentsPart.lastIndexOf('\"');\nif (lastQuote >= 0) {\n  contentsPart = contentsPart.slice(0, lastQuote);\n}\n\n// 흔한 이스케이프 복원: \\\\n -> 실제 개행, \\\\\" -> \"\nlet contents = contentsPart\n  .replace(/\\\\n/g, \"\\n\")\n  .replace(/\\\\t/g, \"\\t\")\n  .replace(/\\r/g, \"\")        // 캐리지리턴 제거\n  .replace(/\\\\\"/g, '\"');     // 이스케이프 따옴표 복원\n\n// 혹시 남아있는 JSON 꼬리 제거(드물게 들어온 경우 방지)\ncontents = contents.replace(/\\s*}\\s*$/s, \"\").trim();\n\n// 5) 결과 리턴 (스키마: title/description/contents)\nreturn [\n  {\n    json: {\n      title,\n      description,\n      contents\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        816,
        -96
      ],
      "id": "e1124b48-722a-44d5-8345-6e4f66bd4971",
      "name": "Code in JavaScript"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "ConceptMaker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ConceptMaker": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "ConceptMaker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "80abff17-771b-4e5d-8e86-56b111f603b8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "80eb4af7e1f0a6b1250e1e59a96c1b5d5d7138f42a94f997f80629b587ebbfc8"
  },
  "id": "xKomgbt4BlbvraAD",
  "tags": []
}