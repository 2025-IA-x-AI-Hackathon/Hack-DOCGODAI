{
  "name": "106-2. QuizGrader",
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST"
        ],
        "path": "grade1",
        "responseMode": "responseNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "607ece6c-3f33-4899-b7be-cd07a7287ffe",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        240,
        -96
      ],
      "webhookId": "19a51d5d-bffc-4238-9c73-f40933d463d7",
      "retryOnFail": false,
      "typeVersion": 2.1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e2e66220-73f7-4ecd-bc66-430ed4697083",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        240,
        160
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "o1pUX0sSSunBHGtz",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "c651debc-45e3-4222-99e9-ddf40eb244da",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1008,
        -96
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "jsCode": "// 1. 입력 가져오기\nlet raw = $input.first().json.output;\n\n// 2. 코드블록( ```json ... ``` ) 제거\nif (typeof raw === \"string\") {\n  raw = raw.replace(/```json\\s*/g, \"\").replace(/```/g, \"\").trim();\n}\n\n// 3. 문자열을 JSON으로 파싱\nlet parsed;\ntry {\n  parsed = JSON.parse(raw);\n} catch (e) {\n  parsed = { quizes: [] };\n}\n\n// 4. 결과 반환 (불필요한 wrapping 없이)\nreturn parsed;\n"
      },
      "id": "e1397f19-8f4c-4971-8db6-1c31f451c3bc",
      "name": "Code in JavaScript",
      "type": "n8n-nodes-base.code",
      "position": [
        816,
        -96
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=={{\n\"📘 Course Title: \" + $json.body.output.courseTitle + \"\\n\" +\n\"📝 Course Description: \" + $json.body.output.courseDescription + \"\\n\\n\" +\n\"📚 Contents:\\n\" +\n$json.body.output.contents.map((c, i) => (\n  \"  [\" + (i + 1) + \"] Quiz: \" + c.quiz + \"\\n\" +\n  \"      Answer: \" + c.answer\n)).join(\"\\n\\n\") +\n\"\\n\\n✅ End of Summary\\n\"\n}}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "당신은 JSON 응답 전용 AI입니다.\n\n입력 데이터는 다음 형식으로 주어집니다:\n\n{\n  \"output\": {\n    \"courseTitle\": \"Python 기초 테스트\",\n    \"courseDescription\": \"자료형, 조건문, 반복문 중심 평가\",\n    \"contents\": [\n      {\"quiz\": \"파이썬에서 리스트의 길이를 구하는 함수는?\", \"answer\": \"len()\"},\n      {\"quiz\": \"반복문을 탈출하는 키워드는?\", \"answer\": \"continue\"},\n      {\"quiz\": \"if 문의 조건이 거짓이면 else 절이 실행된다. (O/X)\", \"answer\": \"O\"}\n    ]\n  }\n}\n\n작업:\n\nYou are an expert AI grader, meticulously evaluating student answers against provided quizzes within the context of a course. Your task is to process the `content`, extract relevant information, and for each content item, calculate a 'score' (e.g., 'correct', 'incorrect', or a percentage) for the student's 'answer' to the 'quiz'. You must also determine the 'correct_answer' for each quiz. The output should be a list of JSON objects, each containing the 'id', 'score', and 'correct_answer' for a content item.\n# Step by Step instructions\n1. Parse the Course Data Json to extract the 'courseTitle', 'courseDescription', and the list of 'contents'.\n2. For each 'content' object in the 'contents' list:\n    a. Extract the 'id', 'quiz', and 'answer' from the 'content' object.\n    b. Evaluate the 'answer' against the 'quiz' within the context of the 'courseTitle' and 'courseDescription'.\n    c. Calculate a 'score' for the answer (e.g., 'correct', 'incorrect', or a percentage).\n    d. Determine the 'correct_answer' for the quiz.\n    e. Create a JSON object with the 'id', 'score', and 'correct_answer'.\n    f. Add this JSON object to a list of score objects.\n3. Once all 'content' objects have been processed, output the complete list of score objects as a JSON array.\n\n\n\n\n\n출력 형식 (반드시 JSON):\n{\n \"scores\" : [\n { \"id\" : \"number\", \"score\" : \"number\" \"correct_answer\" : \"string\" }, \n{ \"id\" : \"number\", \"score\" : \"number\" \"correct_answer\" : \"string\" }, \n{ \"id\" : \"number\", \"score\" : \"number\" \"correct_answer\" : \"string\" } \n]\n}\n\n⚠️ 규칙:\n- 반드시 위 JSON 구조만 출력하세요.\n- 절대로 {\"output\": {...}} 또는 문자열(JSON string) 형태로 감싸지 마세요.\n- 대화형 멘트, 설명, 사족 없이 오직 JSON 데이터만 출력하세요.\n- \"contents\" 필드는 markdown 문서 본문으로 채우세요 .\n⚠️ 출력 시 절대로 Markdown 코드블록(````json`, ``` 등)을 포함하지 마세요.\n⚠️ 절대로 {\"output\": {...}} 형태로 감싸지 말고, \n오직 {\"title\": \"...\", \"description\": \"...\", \"contents\": \"...\"} 구조로만 출력하세요.\n"
        }
      },
      "id": "c247e314-5962-4329-818b-188da1077c2d",
      "name": "QuizGrader",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        448,
        -96
      ],
      "typeVersion": 3,
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "QuizGrader",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QuizGrader": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "QuizGrader",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "af529730-0b76-40e0-bcf2-e2aa4943c19a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "80eb4af7e1f0a6b1250e1e59a96c1b5d5d7138f42a94f997f80629b587ebbfc8"
  },
  "id": "4iLABMvaKckiB0nd",
  "tags": []
}